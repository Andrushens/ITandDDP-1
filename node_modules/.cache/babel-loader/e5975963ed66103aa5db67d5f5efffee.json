{"ast":null,"code":"var _jsxFileName = \"/home/andrushens/anime/term6/final_itirod/lab6/src/components/HomePageComponents/ChatMessages.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { getDocs, query } from 'firebase/firestore';\nimport { collection, doc, deleteDoc, addDoc, where } from 'firebase/firestore';\nimport { Context } from '../../index';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport MessageElement from './MessageElement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatMessages(_ref) {\n  _s();\n\n  let {\n    dialog,\n    onEmptyDelete\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const textFieldRef = useRef();\n  useEffect(async () => {\n    var messages = data.docs.map(doc => ({ ...doc.data(),\n      id: doc.id,\n      isSelected: false\n    })).sort(function (a, b) {\n      return a.date - b.date;\n    });\n    setMessages(messages);\n  }, []);\n\n  const submitDeleteMessage = async event => {\n    var selectedMessages = messages.filter(msg => msg.isSelected);\n\n    if (selectedMessages.length == 0) {\n      onEmptyDelete();\n    }\n\n    for (var i = 0; i < selectedMessages.length; i++) {\n      var message = selectedMessages[i];\n      const challengeDoc = doc(db, \"messages\", message.id);\n      await deleteDoc(challengeDoc);\n    }\n\n    setMessages(messages.filter(msg => !msg.isSelected));\n  };\n\n  const submitSendMessage = async event => {\n    if (textFieldRef.current.value === '') return;\n    var timestamp = new Date().getTime();\n    var message = {\n      text: textFieldRef.current.value,\n      authorName: user.email,\n      date: timestamp,\n      dialogId: dialog.id\n    };\n    let ref = await addDoc(messagesCollectionRef, message);\n    message.id = ref.id;\n    setMessages(prevMessages => [...prevMessages, message]); // textFieldRef.current.value = null\n  };\n\n  const onMessageClick = message => {\n    message.isSelected = !message.isSelected;\n    setMessages(prevMessages => {\n      return [...messages];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat--header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"display-dialogs-button\",\n        className: \"display-dialogs-button\",\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"current-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"delete-button\",\n        className: \"delete-button\",\n        onClick: submitDeleteMessage,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"chat--messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(MessageElement, {\n        mainUsername: user.email,\n        message: message,\n        onClick: onMessageClick\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"message\",\n      className: \"chat--footer-textarea\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text\",\n        className: \"message-text\",\n        ref: textFieldRef,\n        rows: \"3\",\n        placeholder: \"Write a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        id: \"button-send\",\n        value: \"Send\",\n        onClick: submitSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatMessages, \"jNTZ6PjJgl/uzKzgVZAgBp+ZBYs=\");\n\n_c = ChatMessages;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessages\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","getDocs","query","collection","doc","deleteDoc","addDoc","where","Context","useAuthState","MessageElement","ChatMessages","dialog","onEmptyDelete","messages","setMessages","textFieldRef","data","docs","map","id","isSelected","sort","a","b","date","submitDeleteMessage","event","selectedMessages","filter","msg","length","i","message","challengeDoc","db","submitSendMessage","current","value","timestamp","Date","getTime","text","authorName","user","email","dialogId","ref","messagesCollectionRef","prevMessages","onMessageClick"],"sources":["/home/andrushens/anime/term6/final_itirod/lab6/src/components/HomePageComponents/ChatMessages.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react'\nimport { getDocs, query } from 'firebase/firestore'\nimport { collection, doc, deleteDoc, addDoc, where } from 'firebase/firestore'\nimport { Context } from '../../index'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport MessageElement from './MessageElement'\n\nexport default function ChatMessages({ dialog, onEmptyDelete }) {\n    const [messages, setMessages] = useState([])\n    const textFieldRef = useRef()\n\n    useEffect(async () => {\n        var messages = data.docs.map(doc => ({ ...doc.data(), id: doc.id, isSelected: false }))\n            .sort(function (a, b) { return a.date - b.date })\n        setMessages(messages)\n    }, [])\n\n    const submitDeleteMessage = async (event) => {\n        var selectedMessages = messages.filter((msg) => msg.isSelected)\n        if (selectedMessages.length == 0) {\n            onEmptyDelete()\n        }\n        for (var i = 0; i < selectedMessages.length; i++) {\n            var message = selectedMessages[i]\n            const challengeDoc = doc(db, \"messages\", message.id)\n            await deleteDoc(challengeDoc)\n        }\n        setMessages(messages.filter((msg) => !msg.isSelected))\n    }\n\n    const submitSendMessage = async (event) => {\n        if (textFieldRef.current.value === '') return\n        var timestamp = (new Date()).getTime();\n        var message = { text: textFieldRef.current.value, authorName: user.email, date: timestamp, dialogId: dialog.id }\n        let ref = await addDoc(messagesCollectionRef, message)\n        message.id = ref.id\n        setMessages((prevMessages) => [...prevMessages, message])\n        // textFieldRef.current.value = null\n    }\n\n    const onMessageClick = (message) => {\n        message.isSelected = !message.isSelected;\n        setMessages((prevMessages) => { return [...messages] })\n    }\n\n    return (\n        <section className='chat'>\n            <div className=\"chat--header\">\n                <button id=\"display-dialogs-button\" className=\"display-dialogs-button\">-</button>\n                <p id=\"current-user\"></p>\n                <button id=\"delete-button\" className=\"delete-button\" onClick={submitDeleteMessage}>Delete</button>\n            </div>\n            <ul id=\"chat--messages\">\n                {\n                    messages.map((message) =>\n                        <MessageElement key={message.id} mainUsername={user.email} message={message} onClick={onMessageClick} />\n                    )\n                }\n            </ul>\n            <form name=\"message\" className=\"chat--footer-textarea\">\n                <textarea name=\"text\" className=\"message-text\" ref={textFieldRef} rows=\"3\" placeholder=\"Write a message...\"></textarea>\n                <input type=\"button\" id=\"button-send\" value=\"Send\" onClick={submitSendMessage} />\n            </form>\n        </section>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}