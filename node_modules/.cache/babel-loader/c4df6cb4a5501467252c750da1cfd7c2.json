{"ast":null,"code":"var _jsxFileName = \"/home/andrushens/anime/term6/final_itirod/lab6/src/components/HomePageComponents/ChatMessages.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { doc, deleteDoc, addDoc } from 'firebase/firestore';\nimport { Context } from '../../index';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport MessageElement from './MessageElement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatMessages(_ref) {\n  _s();\n\n  let {\n    dialog,\n    onEmptyDelete\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const textFieldRef = useRef();\n  const {\n    auth\n  } = useContext(Context);\n  const [user] = useAuthState(auth);\n  useEffect(async () => {\n    setMessages(dialog.messages);\n  }, []);\n\n  const submitDeleteMessage = async event => {\n    var selectedMessages = messages.filter(msg => msg.isSelected);\n\n    if (selectedMessages.length == 0) {\n      onEmptyDelete();\n    }\n\n    for (var i = 0; i < selectedMessages.length; i++) {\n      var message = selectedMessages[i];\n      const challengeDoc = doc(db, \"messages\", message.id);\n      await deleteDoc(challengeDoc);\n    }\n\n    setMessages(messages.filter(msg => !msg.isSelected));\n  };\n\n  const submitSendMessage = async event => {\n    if (textFieldRef.current.value === '') return;\n    var timestamp = new Date().getTime();\n    var message = {\n      text: textFieldRef.current.value,\n      authorName: user.email,\n      date: timestamp,\n      dialogId: dialog.id\n    };\n    let ref = await addDoc(messagesCollectionRef, message);\n    message.id = ref.id;\n    setMessages(prevMessages => [...prevMessages, message]); // textFieldRef.current.value = null\n  };\n\n  const onMessageClick = message => {\n    message.isSelected = !message.isSelected;\n    setMessages(prevMessages => {\n      return [...messages];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat--header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"display-dialogs-button\",\n        className: \"display-dialogs-button\",\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"current-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"delete-button\",\n        className: \"delete-button\",\n        onClick: submitDeleteMessage,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"chat--messages\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(MessageElement, {\n        mainUsername: user.email,\n        message: message,\n        onClick: onMessageClick\n      }, message.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      name: \"message\",\n      className: \"chat--footer-textarea\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text\",\n        className: \"message-text\",\n        ref: textFieldRef,\n        rows: \"3\",\n        placeholder: \"Write a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        id: \"button-send\",\n        value: \"Send\",\n        onClick: submitSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatMessages, \"YoFu2vLp0x1Wq/A2PXECRHWH+A4=\", false, function () {\n  return [useAuthState];\n});\n\n_c = ChatMessages;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMessages\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","doc","deleteDoc","addDoc","Context","useAuthState","MessageElement","ChatMessages","dialog","onEmptyDelete","messages","setMessages","textFieldRef","auth","user","submitDeleteMessage","event","selectedMessages","filter","msg","isSelected","length","i","message","challengeDoc","db","id","submitSendMessage","current","value","timestamp","Date","getTime","text","authorName","email","date","dialogId","ref","messagesCollectionRef","prevMessages","onMessageClick","map"],"sources":["/home/andrushens/anime/term6/final_itirod/lab6/src/components/HomePageComponents/ChatMessages.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react'\nimport { doc, deleteDoc, addDoc } from 'firebase/firestore'\nimport { Context } from '../../index'\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport MessageElement from './MessageElement'\n\nexport default function ChatMessages({ dialog, onEmptyDelete }) {\n    const [messages, setMessages] = useState([])\n    const textFieldRef = useRef()\n    const { auth } = useContext(Context)\n    const [user] = useAuthState(auth)\n\n    useEffect(async () => {\n        setMessages(dialog.messages)\n    }, [])\n\n    const submitDeleteMessage = async (event) => {\n        var selectedMessages = messages.filter((msg) => msg.isSelected)\n        if (selectedMessages.length == 0) {\n            onEmptyDelete()\n        }\n        for (var i = 0; i < selectedMessages.length; i++) {\n            var message = selectedMessages[i]\n            const challengeDoc = doc(db, \"messages\", message.id)\n            await deleteDoc(challengeDoc)\n        }\n        setMessages(messages.filter((msg) => !msg.isSelected))\n    }\n\n    const submitSendMessage = async (event) => {\n        if (textFieldRef.current.value === '') return\n        var timestamp = (new Date()).getTime();\n        var message = { text: textFieldRef.current.value, authorName: user.email, date: timestamp, dialogId: dialog.id }\n        let ref = await addDoc(messagesCollectionRef, message)\n        message.id = ref.id\n        setMessages((prevMessages) => [...prevMessages, message])\n        // textFieldRef.current.value = null\n    }\n\n    const onMessageClick = (message) => {\n        message.isSelected = !message.isSelected;\n        setMessages((prevMessages) => { return [...messages] })\n    }\n\n    return (\n        <section className='chat'>\n            <div className=\"chat--header\">\n                <button id=\"display-dialogs-button\" className=\"display-dialogs-button\">-</button>\n                <p id=\"current-user\"></p>\n                <button id=\"delete-button\" className=\"delete-button\" onClick={submitDeleteMessage}>Delete</button>\n            </div>\n            <ul id=\"chat--messages\">\n                {\n                    messages.map((message) =>\n                        <MessageElement key={message.id} mainUsername={user.email} message={message} onClick={onMessageClick} />\n                    )\n                }\n            </ul>\n            <form name=\"message\" className=\"chat--footer-textarea\">\n                <textarea name=\"text\" className=\"message-text\" ref={textFieldRef} rows=\"3\" placeholder=\"Write a message...\"></textarea>\n                <input type=\"button\" id=\"button-send\" value=\"Send\" onClick={submitSendMessage} />\n            </form>\n        </section>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}